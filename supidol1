repeat task.wait() until game:IsLoaded()
task.wait(2)

-- 🎯 Danh sách target (LocalizedText)
local targets = {
    "Strawberry Elephant","Graipuss Medussi","To to to Sahur","Pot Hotspot","Chicleteira Bicicleteira",
    "Los Chicleteiras","La Grande Combinasion","Nuclearo Dinossauro","Esok Sekolah","Ketupat Kepat",
    "Money Money Puggy","Tictac Sahur","Ketchuru and Musturu","Garama and Madundung","Spaghetti Tualetti",
    "Dragon Cannelloni","67","Mariachi Corazoni","Tacorita Bicicleta","La Extinct Grande",
    "Quesadilla Crocodila","Los Nooo My Hotspotsitos","Las Sis","Celularcini Viciosini","Los Bros",
    "Tralaledon","Los Tacoritas","Los Primos","La Sahur Combinasion","Los Combinasionas",
    "Los Hotspotsitos","La Supreme Combinasion","Los 67","La Secret Combinasion","Burguro And Fryuro"
}

-- 🌐 Webhook
local HttpService = game:GetService("HttpService")
local url = "https://discord.com/api/webhooks/1422467802744356955/MtviPDZEJ2mnRUkErjusdNheW3exDBVGPCg-1AXvmHjnai17llKqA1NMTeKwetjSp05k"

-- 📜 Join Script
local joinScript = 'game:GetService("TeleportService"):TeleportToPlaceInstance(' ..
    game.PlaceId .. ', "' .. game.JobId .. '", game.Players.LocalPlayer)'

-- 🔍 Check target trong DisplayName.LocalizedText
-- 🔍 Check target trong DisplayName.LocalizedText
local function checkTargets()
    local foundTargets = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("TextLabel") and obj.Name == "DisplayName" then
            local txt = string.lower(obj.LocalizedText or "")
            for _, name in ipairs(targets) do
                if string.find(txt, string.lower(name)) then
                    if not table.find(foundTargets, name) then
                        table.insert(foundTargets, name)
                    end
                end
            end
        end
    end
    return #foundTargets > 0, foundTargets
end


-- 📤 Gửi webhook
-- 📤 Gửi webhook
local function sendWebhook(foundTargets)
    local Players = game:GetService("Players")
    local payload = {
        ["embeds"] = { {
            ["title"] = "🎯 Target Detected!",
            ["description"] = "✅ " .. table.concat(foundTargets, ", "),
            ["color"] = 0x00FF00,
            ["fields"] = {
                {["name"] = "👥 Players", ["value"] = tostring(#Players:GetPlayers()) .. " / " .. tostring(Players.MaxPlayers), ["inline"] = true},
                {["name"] = "🆔 JobId", ["value"] = "`" .. game.JobId .. "`", ["inline"] = false},
                {["name"] = "🎮 Game", ["value"] = "**" .. game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name .. "**", ["inline"] = false},
                {["name"] = "📜 Join Script", ["value"] = "```lua\n" .. joinScript .. "\n```", ["inline"] = false}
            },
            ["footer"] = {["text"] = "Spyder Scanner | User: " .. game.Players.LocalPlayer.Name},
            ["timestamp"] = DateTime.now():ToIsoDate()
        }},
        ["username"] = "Spyder Scanner"
    }

    pcall(function()
        http_request({
            Url = url,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = HttpService:JSONEncode(payload)
        })
    end)
    print("✅ Đã gửi webhook:", table.concat(foundTargets, ", "))
end


-- 🚪 Server hop (logic full)
pcall(function()
    local TeleportService = game:GetService("TeleportService")
    local Players = game:GetService("Players")

    local PlaceID = game.PlaceId
    local foundAnything = ""
    local actualHour = os.date("!*t").hour
    local AllIDs = {}

    -- 📂 File riêng cho từng acc (theo UserId)
    local fileName = "NotSameServers".json"

    -- Đọc file
    local success, result = pcall(function()
        return HttpService:JSONDecode(readfile(fileName))
    end)
    if success and type(result) == "table" then
        AllIDs = result
    else
        AllIDs = {actualHour}
        pcall(function()
            writefile(fileName, HttpService:JSONEncode(AllIDs))
        end)
    end

    -- Hàm lấy danh sách server
   local function ListServers(cursor)
       task.wait(math.random(1,5))
        local url = "https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"
        if cursor then
            url = url .. "&cursor=" .. cursor
        end
        local ok, body = pcall(function() return game:HttpGet(url) end)
        if ok and body then
            local decoded = HttpService:JSONDecode(body)
            if decoded and decoded.data then
                return decoded
            end
        end
        return {data={}}
    end

    -- Hàm teleport
    -- Hàm teleport
local function TPReturner()
    -- 🔍 check target trong server hiện tại
    local found, foundTargets = checkTargets()
    if found then
        -- ⏳ Ở lại 6 giây, mỗi 2s gửi webhook/check lại
        for i = 1, 3 do
            sendWebhook(foundTargets)
            print("🎯 Target(s):", table.concat(foundTargets, ", "), " | Check lần:", i)
            task.wait(2)
            found, foundTargets = checkTargets()
        end
        print("⏳ Đã ở lại 6s -> tiếp tục hop...")
    end

    -- 🔄 Hop sang server khác
    local servers = ListServers(foundAnything)
    if servers.nextPageCursor then
        foundAnything = servers.nextPageCursor
    end

    for _, v in ipairs(servers.data) do
        local id = tostring(v.id)
        if v.playing < v.maxPlayers and id ~= game.JobId then
            -- Reset mỗi giờ
            if AllIDs[1] ~= actualHour then
                AllIDs = {actualHour}
            end

            if not table.find(AllIDs, id) then
                table.insert(AllIDs, id)
                pcall(function()
                    writefile(fileName, HttpService:JSONEncode(AllIDs))
                end)
                print("🔄 Teleporting tới server:", id, " | " .. v.playing .. "/" .. v.maxPlayers)
                TeleportService:TeleportToPlaceInstance(PlaceID, id, Players.LocalPlayer)
                task.wait(0.5)
            end
        end
    end
end

-- 🔁 vòng lặp server hop (0.7s mỗi lần)
while task.wait(0.7) do
    pcall(TPReturner)
end
end)
