repeat task.wait() until game:IsLoaded()

-- ============[ T·ªêI ∆ØU ƒê·ªí H·ªåA - ∆ØU TI√äN CAO ]============
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")

print("üé® B·∫Øt ƒë·∫ßu t·ªëi ∆∞u ƒë·ªì h·ªça...")

-- Gi·∫£m quality xu·ªëng th·∫•p nh·∫•t
pcall(function()
    local rs = settings():GetService("RenderSettings")
    if rs then
        rs.QualityLevel = Enum.QualityLevel.Level01
    end
end)

-- T·∫Øt c√°c hi·ªáu ·ª©ng Lighting
pcall(function()
    Lighting.GlobalShadows = false
    Lighting.EnvironmentDiffuseScale = 0
    Lighting.EnvironmentSpecularScale = 0
    Lighting.FogEnd = 1000
    Lighting.Brightness = 1
    Lighting.ClockTime = 12
    Lighting.ShadowSoftness = 0
    
    -- T·∫Øt c√°c effect
    for _, v in ipairs(Lighting:GetChildren()) do
        if v:IsA("BloomEffect") or v:IsA("SunRaysEffect") or v:IsA("DepthOfFieldEffect")
            or v:IsA("BlurEffect") or v:IsA("ColorCorrectionEffect") then
            pcall(function() v.Enabled = false end)
        end
    end
    
    -- T·∫°o stub effects n·∫øu c·∫ßn
    local function ensureEffect(cls, name)
        local eff = Lighting:FindFirstChild(name)
        if not eff then
            local bycls = Lighting:FindFirstChildOfClass(cls)
            if bycls then
                eff = bycls
                eff.Name = name
            else
                eff = Instance.new(cls)
                eff.Name = name
                eff.Parent = Lighting
            end
        end
        pcall(function() eff.Enabled = false end)
    end
    
    ensureEffect("SunRaysEffect", "SunRays")
    ensureEffect("BloomEffect", "Bloom")
    ensureEffect("DepthOfFieldEffect", "DepthOfField")
    ensureEffect("BlurEffect", "Blur")
    ensureEffect("ColorCorrectionEffect", "ColorCorrection")
end)

-- T·ªëi ∆∞u Terrain v√† Workspace
pcall(function()
    local Terrain = workspace:FindFirstChildOfClass("Terrain")
    if Terrain then
        Terrain.WaterWaveSize = 0
        Terrain.WaterWaveSpeed = 0
        Terrain.WaterReflectance = 0
        Terrain.WaterTransparency = 1
    end
    workspace.StreamingEnabled = true
    workspace.LevelOfDetail = Enum.ModelLevelOfDetail.Disabled
end)

-- T·ªëi ∆∞u t·∫•t c·∫£ parts trong workspace (ch·∫°y ngay l·∫≠p t·ª©c)
local ok, descs = pcall(workspace.GetDescendants, workspace)
if ok and type(descs) == "table" then
    for _, inst in ipairs(descs) do
        if inst:IsA("BasePart") then
            pcall(function()
                inst.Material = Enum.Material.SmoothPlastic
                inst.CastShadow = false
                inst.Reflectance = 0
            end)
        elseif inst:IsA("ParticleEmitter") or inst:IsA("Trail")
            or inst:IsA("Fire") or inst:IsA("Smoke") or inst:IsA("Sparkles") then
            pcall(function() inst.Enabled = false end)
        elseif inst:IsA("Decal") or inst:IsA("Texture") then
            pcall(function()
                inst.Transparency = 1
                inst.ZIndex = 0
            end)
        elseif inst:IsA("SurfaceAppearance") then
            pcall(function() inst:Destroy() end)
        end
    end
end

print("‚úÖ ƒê√£ t·ªëi ∆∞u ƒë·ªì h·ªça xong!")

-- ============[ L·ªöP PH·ª¶ M√ÄN H√åNH TR·∫ÆNG ]============
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local LP = Players.LocalPlayer

local WHITE_ON_START = true
local TOGGLE_KEY = Enum.KeyCode.P
local WhiteGui, WhiteFrame, WhiteOn = nil, nil, false

local function ensureWhite()
    if WhiteGui and WhiteGui.Parent then return end
    
    local pg = nil
    local ok = pcall(function()
        pg = LP and LP:WaitForChild("PlayerGui", 10)
    end)
    if not ok or not pg then
        warn("[WhiteScreen] PlayerGui not found")
        return
    end
    
    WhiteGui = Instance.new("ScreenGui")
    WhiteGui.Name = "WhiteOverlay"
    WhiteGui.ResetOnSpawn = false
    WhiteGui.IgnoreGuiInset = true
    WhiteGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    WhiteGui.Parent = pg
    
    WhiteFrame = Instance.new("Frame")
    WhiteFrame.Size = UDim2.fromScale(1, 1)
    WhiteFrame.BackgroundColor3 = Color3.new(1, 1, 1)
    WhiteFrame.BorderSizePixel = 0
    WhiteFrame.Visible = false
    WhiteFrame.Parent = WhiteGui
end

local function setWhite(b)
    if not (WhiteGui and WhiteGui.Parent) then ensureWhite() end
    if not (WhiteGui and WhiteGui.Parent) then return end
    WhiteOn = b and true or false
    if WhiteFrame then WhiteFrame.Visible = WhiteOn end
    print(WhiteOn and "‚¨ú White screen: ON" or "‚¨õ White screen: OFF")
end

-- Toggle b·∫±ng ph√≠m P
pcall(function()
    UIS.InputBegan:Connect(function(input, gpe)
        if gpe then return end
        if input.KeyCode == TOGGLE_KEY then
            setWhite(not WhiteOn)
        end
    end)
end)

if WHITE_ON_START then
    setWhite(true)
end

-- Delay 1s sau khi ho√†n th√†nh t·ªëi ∆∞u
task.wait(1)

-- ============[ SCRIPT G·ªêC ]============

-- üéØ Danh s√°ch target
local targets = {
    "Strawberry Elephant","Graipuss Medussi","To to to Sahur","Pot Hotspot","Chicleteira Bicicleteira",
    "Los Chicleteiras","La Grande Combinasion","Nuclearo Dinossauro","Esok Sekolah","Ketupat Kepat",
    "Money Money Puggy","Tictac Sahur","Ketchuru and Musturu","Garama and Madundung","Spaghetti Tualetti",
    "Dragon Cannelloni","67","Mariachi Corazoni","Tacorita Bicicleta","La Extinct Grande",
    "Quesadilla Crocodila","Los Nooo My Hotspotsitos","Las Sis","Celularcini Viciosini","Los Bros",
    "Tralaledon","Los Tacoritas","Los Primos","La Sahur Combinasion","Los Combinasionas",
    "Los Hotspotsitos","La Supreme Combinasion","Los 67","La Secret Combinasion","Burguro And Fryuro"
}

-- üåê Webhook
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local url = "https://discord.com/api/webhooks/1422467802744356955/MtviPDZEJ2mnRUkErjusdNheW3exDBVGPCg-1AXvmHjnai17llKqA1NMTeKwetjSp05k"

-- üîç Check target (qu√©t h·∫øt to√†n b·ªô workspace)
local function checkTargets()
    local foundTargets = {}
    local targetSet = {} -- D√πng ƒë·ªÉ check nhanh
    
    -- Convert targets sang lowercase v√† l∆∞u v√†o set
    for _, name in ipairs(targets) do
        targetSet[string.lower(name)] = name
    end
    
    -- Qu√©t h·∫øt workspace
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("TextLabel") and obj.Name == "DisplayName" then
            local txt = string.lower(obj.LocalizedText or "")
            
            -- Check t·ª´ng target
            for targetLower, targetOriginal in pairs(targetSet) do
                if string.find(txt, targetLower, 1, true) then
                    if not table.find(foundTargets, targetOriginal) then
                        table.insert(foundTargets, targetOriginal)
                    end
                end
            end
        end
    end
    
    return #foundTargets > 0, foundTargets
end

-- üì§ G·ª≠i webhook
local lastJobIdSent = nil
local function sendWebhook(foundTargets)
    local placeId = game.PlaceId
    local jobId = game.JobId
    if jobId == lastJobIdSent then return end
    lastJobIdSent = jobId

    local joinScript = "game:GetService('TeleportService'):TeleportToPlaceInstance(" .. placeId .. ", '" .. jobId .. "', game.Players.LocalPlayer)"
    local joinLink = "https://chillihub1.github.io/chillihub-joiner/?placeId=" .. placeId .. "&gameInstanceId=" .. jobId

    local payload = {
        ["embeds"] = {{
            ["title"] = "üéØ Target Detected!",
            ["description"] = "‚úÖ " .. table.concat(foundTargets, ", "),
            ["color"] = 0x00FF00,
            ["fields"] = {
                {["name"] = "üë• Players", ["value"] = tostring(#Players:GetPlayers()) .. " / " .. tostring(Players.MaxPlayers), ["inline"] = true},
                {["name"] = "üÜî JobId", ["value"] = "`" .. jobId .. "`", ["inline"] = false},
                {["name"] = "üåê Join Link", ["value"] = "[Join Server](" .. joinLink .. ")", ["inline"] = false},
                {["name"] = "üìú Join Script", ["value"] = "```lua\n" .. joinScript .. "\n```", ["inline"] = false}
            },
            ["footer"] = {["text"] = "Spyder Scanner | User: " .. Players.LocalPlayer.Name},
            ["timestamp"] = DateTime.now():ToIsoDate()
        }},
        ["username"] = "Spyder Scanner"
    }

    pcall(function()
        http_request({
            Url = url,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = HttpService:JSONEncode(payload)
        })
    end)
    print("‚úÖ G·ª≠i webhook:", table.concat(foundTargets, ", "))
end

-- üö™ Server hop
local PlaceID = game.PlaceId
local foundAnything = ""
local AllIDs = {}
local joinedCount = 0
local isTeleporting = false
local lastTeleportTime = 0

local playerName = Players.LocalPlayer.Name
local fileName = playerName .. "_Servers.json"

-- ƒê·ªçc file ri√™ng
local success, result = pcall(function()
    return HttpService:JSONDecode(readfile(fileName))
end)
if success and type(result) == "table" then
    AllIDs = result
else
    AllIDs = {}
    pcall(function() writefile(fileName, HttpService:JSONEncode(AllIDs)) end)
end

-- L∆∞u JobId (t·ªëi ƒëa 10)
local function saveJobId(id)
    if not table.find(AllIDs, id) then
        table.insert(AllIDs, id)
        if #AllIDs > 10 then
            table.remove(AllIDs, 1)
        end
        pcall(function()
            writefile(fileName, HttpService:JSONEncode(AllIDs))
        end)
    end
end

-- L·∫•y danh s√°ch server
local function ListServers(cursor)
    task.wait(math.random(2,9)
    local url = "https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"
    if cursor then url = url .. "&cursor=" .. cursor end
    local ok, body = pcall(function() return game:HttpGet(url) end)
    if ok and body then
        local decoded = HttpService:JSONDecode(body)
        if decoded and decoded.data then return decoded end
    end
    return {data={}}
end

-- Watchdog: T·ª± ƒë·ªông unlock sau 5s
task.spawn(function()
    while task.wait(0.5) do
        if isTeleporting and (tick() - lastTeleportTime) > 5 then
            print("‚ö†Ô∏è Watchdog: Force unlock isTeleporting")
            isTeleporting = false
        end
    end
end)

-- Reset flag khi teleport l·ªói
TeleportService.TeleportInitFailed:Connect(function()
    print("‚ö†Ô∏è TeleportInitFailed ‚Üí unlock")
    isTeleporting = false
end)

-- L·∫Øng nghe TeleportStateChanged
pcall(function()
    TeleportService.TeleportStateChanged:Connect(function(state)
        if state == Enum.TeleportState.Failed then
            print("‚ö†Ô∏è TeleportState Failed ‚Üí unlock")
            isTeleporting = false
        end
    end)
end)

-- H√†m teleport an to√†n
local function SafeTeleport(id)
    if isTeleporting then 
        return 
    end
    
    isTeleporting = true
    lastTeleportTime = tick()
    saveJobId(id)
    joinedCount += 1
    print("üîÑ Teleporting t·ªõi server:", id, "| Join th·ª©:", joinedCount)
    
    local success = pcall(function()
        TeleportService:TeleportToPlaceInstance(PlaceID, id, Players.LocalPlayer)
    end)
    
    if not success then
        print("‚ùå Teleport failed")
        task.wait(1)
        isTeleporting = false
    end
end

-- H√†m hop ch√≠nh
local function TPReturner()
    if isTeleporting then return end
    
    local found, foundTargets = checkTargets()
    if found then
        sendWebhook(foundTargets)
    end

    local servers = ListServers(foundAnything)
    if servers.nextPageCursor then
        foundAnything = servers.nextPageCursor
    end

    for _, v in ipairs(servers.data) do
        local id = tostring(v.id)
        if v.playing < v.maxPlayers and id ~= game.JobId and not table.find(AllIDs, id) then
            SafeTeleport(id)
            
            if joinedCount >= 100 then
                print("‚ö†Ô∏è ƒê√£ join 100 server kh√¥ng th·∫•y target ‚Üí teleport random")
                isTeleporting = true
                lastTeleportTime = tick()
                pcall(function()
                    TeleportService:Teleport(PlaceID, Players.LocalPlayer)
                end)
                task.wait(5)
                isTeleporting = false
                joinedCount = 0
            end
            break
        end
    end
end

-- Loop ch√≠nh
while task.wait(0.3) do
    if not isTeleporting then
        pcall(TPReturner)
    end
end
