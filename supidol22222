repeat task.wait() until game:IsLoaded()
task.wait(2)

-- üéØ Danh s√°ch target
local targets = {
    "Strawberry Elephant","Graipuss Medussi","To to to Sahur","Pot Hotspot","Chicleteira Bicicleteira",
    "Los Chicleteiras","La Grande Combinasion","Nuclearo Dinossauro","Esok Sekolah","Ketupat Kepat",
    "Money Money Puggy","Tictac Sahur","Ketchuru and Musturu","Garama and Madundung","Spaghetti Tualetti",
    "Dragon Cannelloni","67","Mariachi Corazoni","Tacorita Bicicleta","La Extinct Grande",
    "Quesadilla Crocodila","Los Nooo My Hotspotsitos","Las Sis","Celularcini Viciosini","Los Bros",
    "Tralaledon","Los Tacoritas","Los Primos","La Sahur Combinasion","Los Combinasionas",
    "Los Hotspotsitos","La Supreme Combinasion","Los 67","La Secret Combinasion","Burguro And Fryuro"
}

-- üåê Webhook
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local url = "https://discord.com/api/webhooks/1422467802744356955/MtviPDZEJ2mnRUkErjusdNheW3exDBVGPCg-1AXvmHjnai17llKqA1NMTeKwetjSp05k"

-- üîç Check target
local function checkTargets()
    local foundTargets = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("TextLabel") and obj.Name == "DisplayName" then
            local txt = string.lower(obj.LocalizedText or "")
            for _, name in ipairs(targets) do
                if string.find(txt, string.lower(name)) then
                    if not table.find(foundTargets, name) then
                        table.insert(foundTargets, name)
                    end
                end
            end
        end
    end
    return #foundTargets > 0, foundTargets
end

-- üì§ G·ª≠i webhook
local lastJobIdSent = nil
local function sendWebhook(foundTargets)
    local placeId = game.PlaceId
    local jobId = game.JobId
    if jobId == lastJobIdSent then return end -- tr√°nh g·ª≠i tr√πng server
    lastJobIdSent = jobId

    local joinScript = "game:GetService('TeleportService'):TeleportToPlaceInstance(" .. placeId .. ", '" .. jobId .. "', game.Players.LocalPlayer)"
    local joinLink = "https://chillihub1.github.io/chillihub-joiner/?placeId=" .. placeId .. "&gameInstanceId=" .. jobId

    local payload = {
        ["embeds"] = {{
            ["title"] = "üéØ Target Detected!",
            ["description"] = "‚úÖ " .. table.concat(foundTargets, ", "),
            ["color"] = 0x00FF00,
            ["fields"] = {
                {["name"] = "üë• Players", ["value"] = tostring(#Players:GetPlayers()) .. " / " .. tostring(Players.MaxPlayers), ["inline"] = true},
                {["name"] = "üÜî JobId", ["value"] = "`" .. jobId .. "`", ["inline"] = false},
                {["name"] = "üåê Join Link", ["value"] = "[Join Server](" .. joinLink .. ")", ["inline"] = false},
                {["name"] = "üìú Join Script", ["value"] = "```lua\n" .. joinScript .. "\n```", ["inline"] = false}
            },
            ["footer"] = {["text"] = "Spyder Scanner | User: " .. Players.LocalPlayer.Name},
            ["timestamp"] = DateTime.now():ToIsoDate()
        }},
        ["username"] = "Spyder Scanner"
    }

    pcall(function()
        http_request({
            Url = url,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = HttpService:JSONEncode(payload)
        })
    end)
    print("‚úÖ G·ª≠i webhook:", table.concat(foundTargets, ", "))
end

-- üö™ Server hop
pcall(function()
    local PlaceID = game.PlaceId
    local foundAnything = ""
    local AllIDs = {}
    local joinedCount = 0
    local isTeleporting = false

    local playerName = Players.LocalPlayer.Name
    local fileName = playerName .. "_Servers.json"

    -- ƒê·ªçc file ri√™ng
    local success, result = pcall(function()
        return HttpService:JSONDecode(readfile(fileName))
    end)
    if success and type(result) == "table" then
        AllIDs = result
    else
        AllIDs = {}
        pcall(function() writefile(fileName, HttpService:JSONEncode(AllIDs)) end)
    end

    -- L∆∞u JobId (t·ªëi ƒëa 10)
    local function saveJobId(id)
        if not table.find(AllIDs, id) then
            table.insert(AllIDs, id)
            if #AllIDs > 10 then
                table.remove(AllIDs, 1)
            end
            pcall(function()
                writefile(fileName, HttpService:JSONEncode(AllIDs))
            end)
        end
    end

    -- L·∫•y danh s√°ch server
    local function ListServers(cursor)
        task.wait(math.random(2,9))
        local url = "https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"
        if cursor then url = url .. "&cursor=" .. cursor end
        local ok, body = pcall(function() return game:HttpGet(url) end)
        if ok and body then
            local decoded = HttpService:JSONDecode(body)
            if decoded and decoded.data then return decoded end
        end
        return {data={}}
    end

    -- Reset flag khi teleport l·ªói
    TeleportService.TeleportInitFailed:Connect(function()
        isTeleporting = false
    end)

    -- H√†m teleport an to√†n
    local function SafeTeleport(id)
        if isTeleporting then return end
        isTeleporting = true
        saveJobId(id)
        joinedCount += 1
        print("üîÑ Teleporting t·ªõi server:", id, "| Join th·ª©:", joinedCount)
        task.spawn(function()
            pcall(function()
                TeleportService:TeleportToPlaceInstance(PlaceID, id, Players.LocalPlayer)
            end)
            task.wait(6)
            isTeleporting = false
        end)
    end

    -- H√†m hop ch√≠nh
    local function TPReturner()
        local found, foundTargets = checkTargets()
        if found then
            sendWebhook(foundTargets)
        end

        local servers = ListServers(foundAnything)
        if servers.nextPageCursor then
            foundAnything = servers.nextPageCursor
        end

        for _, v in ipairs(servers.data) do
            local id = tostring(v.id)
            if v.playing < v.maxPlayers and id ~= game.JobId and not table.find(AllIDs, id) then
                SafeTeleport(id)
                if joinedCount >= 100 then
                    print("‚ö†Ô∏è ƒê√£ join 100 server kh√¥ng th·∫•y target ‚Üí teleport random")
                    isTeleporting = true
                    TeleportService:Teleport(PlaceID, Players.LocalPlayer)
                    task.wait(8)
                    isTeleporting = false
                    joinedCount = 0
                end
                break
            end
        end
    end

    -- Loop ch√≠nh
    while task.wait(0.8) do
        if not isTeleporting then
            pcall(TPReturner)
        end
    end
end)
