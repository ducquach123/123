repeat
    task.wait()
until game:IsLoaded()

-- ============[ T·ªêI ∆ØU ƒê·ªí H·ªåA - ∆ØU TI√äN CAO ]============
local Lighting = game:GetService('Lighting')
local RunService = game:GetService('RunService')

print('üé® B·∫Øt ƒë·∫ßu t·ªëi ∆∞u ƒë·ªì h·ªça...')

-- Gi·∫£m quality xu·ªëng th·∫•p nh·∫•t
pcall(function()
    local rs = settings():GetService('RenderSettings')
    if rs then
        rs.QualityLevel = Enum.QualityLevel.Level01
    end
end)

-- T·∫Øt c√°c hi·ªáu ·ª©ng Lighting
pcall(function()
    Lighting.GlobalShadows = false
    Lighting.EnvironmentDiffuseScale = 0
    Lighting.EnvironmentSpecularScale = 0
    Lighting.FogEnd = 1000
    Lighting.Brightness = 1
    Lighting.ClockTime = 12
    Lighting.ShadowSoftness = 0

    -- T·∫Øt c√°c effect
    for _, v in ipairs(Lighting:GetChildren()) do
        if
            v:IsA('BloomEffect')
            or v:IsA('SunRaysEffect')
            or v:IsA('DepthOfFieldEffect')
            or v:IsA('BlurEffect')
            or v:IsA('ColorCorrectionEffect')
        then
            pcall(function()
                v.Enabled = false
            end)
        end
    end

    -- T·∫°o stub effects n·∫øu c·∫ßn
    local function ensureEffect(cls, name)
        local eff = Lighting:FindFirstChild(name)
        if not eff then
            local bycls = Lighting:FindFirstChildOfClass(cls)
            if bycls then
                eff = bycls
                eff.Name = name
            else
                eff = Instance.new(cls)
                eff.Name = name
                eff.Parent = Lighting
            end
        end
        pcall(function()
            eff.Enabled = false
        end)
    end

    ensureEffect('SunRaysEffect', 'SunRays')
    ensureEffect('BloomEffect', 'Bloom')
    ensureEffect('DepthOfFieldEffect', 'DepthOfField')
    ensureEffect('BlurEffect', 'Blur')
    ensureEffect('ColorCorrectionEffect', 'ColorCorrection')
end)

-- T·ªëi ∆∞u Terrain v√† Workspace
pcall(function()
    local Terrain = workspace:FindFirstChildOfClass('Terrain')
    if Terrain then
        Terrain.WaterWaveSize = 0
        Terrain.WaterWaveSpeed = 0
        Terrain.WaterReflectance = 0
        Terrain.WaterTransparency = 1
    end
    workspace.StreamingEnabled = true
    workspace.LevelOfDetail = Enum.ModelLevelOfDetail.Disabled
end)

-- T·ªëi ∆∞u t·∫•t c·∫£ parts trong workspace
local ok, descs = pcall(workspace.GetDescendants, workspace)
if ok and type(descs) == 'table' then
    for _, inst in ipairs(descs) do
        if inst:IsA('BasePart') then
            pcall(function()
                inst.Material = Enum.Material.SmoothPlastic
                inst.CastShadow = false
                inst.Reflectance = 0
            end)
        elseif
            inst:IsA('ParticleEmitter')
            or inst:IsA('Trail')
            or inst:IsA('Fire')
            or inst:IsA('Smoke')
            or inst:IsA('Sparkles')
        then
            pcall(function()
                inst.Enabled = false
            end)
        elseif inst:IsA('Decal') or inst:IsA('Texture') then
            pcall(function()
                inst.Transparency = 1
                inst.ZIndex = 0
            end)
        elseif inst:IsA('SurfaceAppearance') then
            pcall(function()
                inst:Destroy()
            end)
        end
    end
end

print('‚úÖ ƒê√£ t·ªëi ∆∞u ƒë·ªì h·ªça xong!')

-- ============[ L·ªöP PH·ª¶ M√ÄN H√åNH TR·∫ÆNG + ƒê·ªíNG H·ªí ]============
local Players = game:GetService('Players')
local UIS = game:GetService('UserInputService')
local LP = Players.LocalPlayer

local WHITE_ON_START = true
local TOGGLE_KEY = Enum.KeyCode.P
local WhiteGui, WhiteFrame, TimerLabel, WhiteOn = nil, nil, nil, false
local startTime = tick()

local function ensureWhite()
    if WhiteGui and WhiteGui.Parent then
        return
    end

    local pg = nil
    local ok = pcall(function()
        pg = LP and LP:WaitForChild('PlayerGui', 10)
    end)
    if not ok or not pg then
        warn('[WhiteScreen] PlayerGui not found')
        return
    end

    WhiteGui = Instance.new('ScreenGui')
    WhiteGui.Name = 'WhiteOverlay'
    WhiteGui.ResetOnSpawn = false
    WhiteGui.IgnoreGuiInset = true
    WhiteGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    WhiteGui.Parent = pg

    WhiteFrame = Instance.new('Frame')
    WhiteFrame.Size = UDim2.fromScale(1, 1)
    WhiteFrame.BackgroundColor3 = Color3.new(1, 1, 1)
    WhiteFrame.BorderSizePixel = 0
    WhiteFrame.Visible = false
    WhiteFrame.Parent = WhiteGui

    -- ƒê·ªìng h·ªì ƒë·∫øm gi√¢y ·ªü gi·ªØa m√†n h√¨nh
    TimerLabel = Instance.new('TextLabel')
    TimerLabel.Size = UDim2.new(0, 300, 0, 100)
    TimerLabel.Position = UDim2.fromScale(0.5, 0.5)
    TimerLabel.AnchorPoint = Vector2.new(0.5, 0.5)
    TimerLabel.BackgroundTransparency = 1
    TimerLabel.Text = '00:00:00'
    TimerLabel.TextColor3 = Color3.new(0, 0, 0)
    TimerLabel.TextSize = 48
    TimerLabel.Font = Enum.Font.GothamBold
    TimerLabel.TextStrokeTransparency = 0.8
    TimerLabel.Parent = WhiteFrame
end

local function setWhite(b)
    if not (WhiteGui and WhiteGui.Parent) then
        ensureWhite()
    end
    if not (WhiteGui and WhiteGui.Parent) then
        return
    end
    WhiteOn = b and true or false
    if WhiteFrame then
        WhiteFrame.Visible = WhiteOn
    end
    print(WhiteOn and '‚¨ú White screen: ON' or '‚¨õ White screen: OFF')
end

-- Toggle b·∫±ng ph√≠m P
pcall(function()
    UIS.InputBegan:Connect(function(input, gpe)
        if gpe then
            return
        end
        if input.KeyCode == TOGGLE_KEY then
            setWhite(not WhiteOn)
        end
    end)
end)

if WHITE_ON_START then
    setWhite(true)
end

-- C·∫≠p nh·∫≠t ƒë·ªìng h·ªì m·ªói frame
task.spawn(function()
    RunService.RenderStepped:Connect(function()
        if TimerLabel then
            local elapsed = tick() - startTime
            local hours = math.floor(elapsed / 3600)
            local minutes = math.floor((elapsed % 3600) / 60)
            local seconds = math.floor(elapsed % 60)
            TimerLabel.Text =
                string.format('%02d:%02d:%02d', hours, minutes, seconds)
        end
    end)
end)

-- ============[ ·∫®N B·∫¢NG L·ªñI TELEPORT - N√ÇNG CAO ]============
task.spawn(function()
    while task.wait(3) do
        pcall(function()
            local pg = LP:FindFirstChild('PlayerGui')
            if pg then
                for _, gui in ipairs(pg:GetChildren()) do
                    if gui:IsA('ScreenGui') and gui.Enabled then
                        for _, frame in ipairs(gui:GetDescendants()) do
                            if
                                frame:IsA('Frame') or frame:IsA('ImageLabel')
                            then
                                for _, textObj in ipairs(frame:GetDescendants()) do
                                    if
                                        textObj:IsA('TextLabel')
                                        or textObj:IsA('TextButton')
                                    then
                                        local text =
                                            string.lower(textObj.Text or '')

                                        local errorKeywords = {
                                            '772',
                                        }

                                        local isError = false
                                        for _, keyword in ipairs(errorKeywords) do
                                            if text:find(keyword) then
                                                isError = true
                                                break
                                            end
                                        end

                                        if isError then
                                            frame.Visible = false
                                            gui.Enabled = false
                                            print(
                                                'üö´ ƒê√£ ·∫©n b·∫£ng l·ªói:',
                                                textObj.Text
                                            )

                                            for _, btn in
                                                ipairs(frame:GetDescendants())
                                            do
                                                if btn:IsA('TextButton') then
                                                    local btnText =
                                                        string.lower(
                                                            btn.Text or ''
                                                        )
                                                    if
                                                        btnText:find('ok')
                                                        or btnText:find(
                                                            'ƒë√≥ng'
                                                        )
                                                        or btnText:find('close')
                                                    then
                                                        pcall(function()
                                                            for _, connection in
                                                                pairs(
                                                                    getconnections(
                                                                        btn.MouseButton1Click
                                                                    )
                                                                )
                                                            do
                                                                connection:Fire()
                                                            end
                                                        end)
                                                    end
                                                end
                                            end
                                            break
                                        end
                                    end
                                end
                            end
                        end
                    end
                end

                pcall(function()
                    local coreGui = game:GetService('CoreGui')
                    for _, gui in ipairs(coreGui:GetChildren()) do
                        if gui:IsA('ScreenGui') then
                            for _, desc in ipairs(gui:GetDescendants()) do
                                if desc:IsA('TextLabel') then
                                    local text = string.lower(desc.Text or '')
                                    if text:find('772') or text:find('773') then
                                        gui.Enabled = false
                                    end
                                end
                            end
                        end
                    end
                end)
            end
        end)
    end
end)

task.wait(1)

-- ============[ SCRIPT G·ªêC - FULL AUTO FIX ]============

local targets = {
    'Strawberry Elephant',
    'Graipuss Medussi',
    'To to to Sahur',
    'Pot Hotspot',
    'Chicleteira Bicicleteira',
    'Los Chicleteiras',
    'La Grande Combinasion',
    'Nuclearo Dinossauro',
    'Esok Sekolah',
    'Ketupat Kepat',
    'Money Money Puggy',
    'Tictac Sahur',
    'Ketchuru and Musturu',
    'Garama and Madundung',
    'Spaghetti Tualetti',
    'Dragon Cannelloni',
    '67',
    'Mariachi Corazoni',
    'Tacorita Bicicleta',
    'La Extinct Grande',
    'Quesadilla Crocodila',
    'Los Nooo My Hotspotsitos',
    'Las Sis',
    'Celularcini Viciosini',
    'Los Bros',
    'Tralaledon',
    'Los Tacoritas',
    'Los Primos',
    'La Sahur Combinasion',
    'Los Combinasionas',
    'Los Hotspotsitos',
    'La Supreme Combinasion',
    'Los 67',
    'La Secret Combinasion',
    'Burguro And Fryuro',
    'La Spooky Grande',
    'Los Mobilis',
    'Eviledon',
    'Spooky and Pumpky',
}

local HttpService = game:GetService('HttpService')
local TeleportService = game:GetService('TeleportService')
local url =
    'https://discord.com/api/webhooks/1422467802744356955/MtviPDZEJ2mnRUkErjusdNheW3exDBVGPCg-1AXvmHjnai17llKqA1NMTeKwetjSp05k'

-- üîí SYSTEM LOCK v·ªõi nhi·ªÅu l·ªõp b·∫£o v·ªá
local isTeleporting = false
local lastTeleportTime = 0
local teleportAttempts = 0
local MAX_LOCK_TIME = 20 -- T·ªëi ƒëa 20s lock

-- üõ°Ô∏è WATCHDOG #1: Multi-layer timeout protection
task.spawn(function()
    while task.wait(1) do
        local lockDuration = tick() - lastTeleportTime
        
        if isTeleporting then
            -- Layer 1: Soft timeout (15s)
            if lockDuration > 15 then
                print('‚ö†Ô∏è [WATCHDOG-1] Soft timeout 15s ‚Üí unlock')
                isTeleporting = false
                teleportAttempts = 0
            end
            
            -- Layer 2: Hard timeout (20s)
            if lockDuration > MAX_LOCK_TIME then
                print('üö® [WATCHDOG-1] HARD timeout 20s ‚Üí FORCE unlock')
                isTeleporting = false
                teleportAttempts = 0
                lastTeleportTime = 0
            end
        end
    end
end)

-- üõ°Ô∏è WATCHDOG #2: Backup protection m·ªói 3s
task.spawn(function()
    while task.wait(3) do
        if isTeleporting and (tick() - lastTeleportTime) > 18 then
            print('üîì [WATCHDOG-2] Backup unlock after 18s')
            isTeleporting = false
            teleportAttempts = 0
        end
    end
end)

-- üõ°Ô∏è WATCHDOG #3: Emergency unlock on game loaded
task.spawn(function()
    task.wait(5) -- Ch·ªù game stable
    if isTeleporting and (tick() - lastTeleportTime) > 10 then
        print('‚úÖ [WATCHDOG-3] Game loaded ‚Üí emergency unlock')
        isTeleporting = false
        teleportAttempts = 0
    end
end)

-- üõ°Ô∏è AUTO-UNLOCK khi teleport fail
TeleportService.TeleportInitFailed:Connect(function(player, result, error, placeId, teleportOptions)
    print('‚ùå [TELEPORT] InitFailed:', error, '‚Üí instant unlock')
    isTeleporting = false
    teleportAttempts = 0
    task.wait(0.5)
end)

-- üõ°Ô∏è AUTO-UNLOCK theo TeleportState
pcall(function()
    TeleportService.TeleportStateChanged:Connect(function(state, placeId)
        if state == Enum.TeleportState.Failed then
            print('‚ùå [TELEPORT] State Failed ‚Üí instant unlock')
            isTeleporting = false
            teleportAttempts = 0
        elseif state == Enum.TeleportState.Started then
            print('üöÄ [TELEPORT] State Started')
        elseif state == Enum.TeleportState.WaitingForServer then
            print('‚è≥ [TELEPORT] Waiting for server...')
        elseif state == Enum.TeleportState.InProgress then
            print('‚è© [TELEPORT] In Progress...')
        end
    end)
end)

-- üéØ CHECK TARGET
local function checkTargets()
    local foundTargets = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA('TextLabel') and obj.Name == 'DisplayName' then
            local txt = string.lower(obj.LocalizedText or '')

            if string.upper(obj.LocalizedText or '') == 'FUSING' then
                continue
            end

            for _, name in ipairs(targets) do
                if string.find(txt, string.lower(name)) then
                    if not table.find(foundTargets, name) then
                        local parent = obj.Parent
                        local isStolen = false

                        if parent then
                            local stolenLabel = parent:FindFirstChild('Stolen')
                            if stolenLabel and stolenLabel:IsA('TextLabel') then
                                local stolenText = string.upper(
                                    stolenLabel.LocalizedText or ''
                                )
                                if stolenText == 'FUSING' then
                                    isStolen = true
                                end
                            end
                        end

                        if not isStolen then
                            table.insert(foundTargets, name)
                            print('‚úÖ Found valid target:', name)
                        else
                            print('‚ö†Ô∏è Skipped (FUSING):', name)
                        end
                    end
                end
            end
        end
    end
    return #foundTargets > 0, foundTargets
end

-- üì§ SEND WEBHOOK
local lastJobIdSent = nil
local function sendWebhook(foundTargets)
    local placeId = game.PlaceId
    local jobId = game.JobId
    if jobId == lastJobIdSent then
        return
    end
    lastJobIdSent = jobId

    local joinScript = "game:GetService('TeleportService'):TeleportToPlaceInstance("
        .. placeId
        .. ", '"
        .. jobId
        .. "', game.Players.LocalPlayer)"
    local joinLink = 'https://chillihub1.github.io/chillihub-joiner/?placeId='
        .. placeId
        .. '&gameInstanceId='
        .. jobId

    local payload = {
        ['embeds'] = {
            {
                ['title'] = 'üéØ Target Detected!',
                ['description'] = '‚úÖ ' .. table.concat(foundTargets, ', '),
                ['color'] = 0x00FF00,
                ['fields'] = {
                    {
                        ['name'] = 'üë• Players',
                        ['value'] = tostring(#Players:GetPlayers())
                            .. ' / '
                            .. tostring(Players.MaxPlayers),
                        ['inline'] = true,
                    },
                    {
                        ['name'] = 'üÜî JobId',
                        ['value'] = '`' .. jobId .. '`',
                        ['inline'] = false,
                    },
                    {
                        ['name'] = 'üåê Join Link',
                        ['value'] = '[Join Server](' .. joinLink .. ')',
                        ['inline'] = false,
                    },
                    {
                        ['name'] = 'üìú Join Script',
                        ['value'] = '```lua\n' .. joinScript .. '\n```',
                        ['inline'] = false,
                    },
                },
                ['footer'] = {
                    ['text'] = 'Spyder Scanner | User: '
                        .. Players.LocalPlayer.Name,
                },
                ['timestamp'] = DateTime.now():ToIsoDate(),
            },
        },
    }

    pcall(function()
        http_request({
            Url = url,
            Method = 'POST',
            Headers = { ['Content-Type'] = 'application/json' },
            Body = HttpService:JSONEncode(payload),
        })
    end)
    print('‚úÖ G·ª≠i webhook:', table.concat(foundTargets, ', '))
end

-- üìÅ FILE MANAGEMENT
local PlaceID = game.PlaceId
local foundAnything = ''
local AllIDs = {}
local joinedCount = 0

local playerName = Players.LocalPlayer.Name
local fileName = playerName .. '_Servers.json'

local success, result = pcall(function()
    return HttpService:JSONDecode(readfile(fileName))
end)
if success and type(result) == 'table' then
    AllIDs = result
else
    AllIDs = {}
    pcall(function()
        writefile(fileName, HttpService:JSONEncode(AllIDs))
    end)
end

local function saveJobId(id)
    if not table.find(AllIDs, id) then
        table.insert(AllIDs, id)
        if #AllIDs > 10 then
            table.remove(AllIDs, 1)
        end
        pcall(function()
            writefile(fileName, HttpService:JSONEncode(AllIDs))
        end)
    end
end

-- üìã LIST SERVERS
local function ListServers(cursor)
    task.wait(math.random(2, 12))
    local url = 'https://games.roblox.com/v1/games/'
        .. PlaceID
        .. '/servers/Public?sortOrder=Asc&limit=100'
    if cursor then
        url = url .. '&cursor=' .. cursor
    end
    local ok, body = pcall(function()
        return game:HttpGet(url)
    end)
    if ok and body then
        local decoded = HttpService:JSONDecode(body)
        if decoded and decoded.data then
            return decoded
        end
    end
    return { data = {} }
end

-- üöÄ SAFE TELEPORT v·ªõi multi-layer protection
local function SafeTeleport(id)
    -- üîí CHECK #1: ƒêang teleport?
    if isTeleporting then
        local waitTime = tick() - lastTeleportTime
        print(string.format('‚è∏Ô∏è Locked (%.1fs) - skipping...', waitTime))
        return false
    end

    -- üîí CHECK #2: Qu√° nhi·ªÅu attempts li√™n t·ª•c?
    teleportAttempts = teleportAttempts + 1
    if teleportAttempts > 3 then
        print('‚ö†Ô∏è Too many attempts ‚Üí cooling down 5s')
        task.wait(5)
        teleportAttempts = 0
    end

    -- üîê LOCK
    isTeleporting = true
    lastTeleportTime = tick()
    saveJobId(id)
    joinedCount = joinedCount + 1
    
    print(string.format('üîÑ [%d] Teleporting to: %s', joinedCount, id))

    -- üõ°Ô∏è TIMEOUT PROTECTION: T·ª± ƒë·ªông unlock sau 12s
    local unlockTimer = task.delay(12, function()
        if isTeleporting and (tick() - lastTeleportTime) > 12 then
            print('‚è∞ [TIMEOUT] Auto-unlock after 12s')
            isTeleporting = false
            teleportAttempts = 0
        end
    end)

    -- üöÄ ATTEMPT TELEPORT
    local success, err = pcall(function()
        TeleportService:TeleportToPlaceInstance(
            PlaceID,
            id,
            Players.LocalPlayer
        )
    end)

    -- ‚ùå FAILED ‚Üí UNLOCK NGAY
    if not success then
        print('‚ùå Teleport error:', tostring(err))
        task.cancel(unlockTimer)
        task.wait(0.3)
        isTeleporting = false
        teleportAttempts = math.max(0, teleportAttempts - 1)
        return false
    end

    -- ‚úÖ INITIATED ‚Üí Ch·ªù state change unlock
    print('‚úÖ Teleport initiated ‚Üí waiting for response...')
    return true
end

-- üîÑ SERVER HOP MAIN
local function TPReturner()
    -- üîí Safety check
    if isTeleporting then
        return
    end

    -- üéØ Check targets
    local found, foundTargets = checkTargets()
    if found then
        sendWebhook(foundTargets)
    end

    -- üìã Get servers
    local servers = ListServers(foundAnything)
    if servers.nextPageCursor then
        foundAnything = servers.nextPageCursor
    end

    -- üîç Find valid server
    for _, v in ipairs(servers.data) do
        local id = tostring(v.id)
        if
            v.playing < v.maxPlayers
            and id ~= game.JobId
            and not table.find(AllIDs, id)
        then
            local success = SafeTeleport(id)
            
            if success then
                -- üîÅ Reset counter n·∫øu join 100 server
                if joinedCount >= 100 then
                    print('üîÑ 100 servers hopped ‚Üí reset & random teleport')
                    isTeleporting = true
                    lastTeleportTime = tick()
                    pcall(function()
                        TeleportService:Teleport(PlaceID, Players.LocalPlayer)
                    end)
                    task.wait(math.random(7,10))
                    isTeleporting = false
                    joinedCount = 0
                    teleportAttempts = 0
                end
                break
            else
                -- Th·ª≠ server kh√°c n·∫øu fail
                task.wait(0.5)
            end
        end
    end
end

-- üéÆ MANUAL UNLOCK COMMAND
Players.LocalPlayer.Chatted:Connect(function(msg)
    if msg:lower() == '/unlock' or msg:lower() == '/reset' then
        isTeleporting = false
        teleportAttempts = 0
        lastTeleportTime = 0
        joinedCount = 0
        print('üîì Manual unlock! All flags reset.')
    elseif msg:lower() == '/status' then
        print('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ')
        print('üìä STATUS:')
        print('  Lock:', isTeleporting)
        print('  Time:', string.format('%.1fs', tick() - lastTeleportTime))
        print('  Attempts:', teleportAttempts)
        print('  Joined:', joinedCount)
        print('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ')
    end
end)

-- üîÅ MAIN LOOP v·ªõi error recovery
print('üéØ Starting server hopper...')
print('üí° Commands: /unlock, /status')

local loopErrors = 0
while true do
    local success, err = pcall(function()
        if not isTeleporting then
            TPReturner()
        else
            local lockTime = tick() - lastTeleportTime
            if lockTime > 2 then -- Log m·ªói 2s
                print(string.format('‚è≥ Locked for %.1fs...', lockTime))
            end
        end
    end)
    
    if not success then
        loopErrors = loopErrors + 1
        warn('‚ö†Ô∏è Loop error:', err)
        
        if loopErrors > 5 then
            print('üö® Too many errors ‚Üí force unlock')
            isTeleporting = false
            teleportAttempts = 0
            loopErrors = 0
        end
        
        task.wait(2)
    else
        loopErrors = 0
    end
    
    -- Random delay tr√°nh spam
    task.wait(math.random(3, 8) / 10)
end
